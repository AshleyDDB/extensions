"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{"default":e}}function isInstalled(e){void 0!==ffInstalled?e(ffInstalled?null:"FontForge not installed"):_cp2["default"].exec("fontforge -version",function(t){ffInstalled=!t,isInstalled(e)})}function parse(e,t){isInstalled(function(n){null===n?_cp2["default"].exec('fontforge -lang=ff -script parser.ff "'+e+'"',{cwd:cwd},function(e,n,o){if(e)console.log(e),t(e);else try{var i=n.match(jsonFontRegExp)[0];t(null,JSON.parse(i))}catch(r){console.log(r),t(r)}}):t("FontForge not available")})}function convert(e,t,n){isInstalled(function(o){null===o&&_cp2["default"].exec('fontforge -lang=ff -script converter.ff "'+e+'" "'+t+'"',{cwd:cwd},function(e,t,o){e?(console.log(e),n(e)):n(null)})})}function init(e){e.hasDomain(DOMAIN)||e.registerDomain(DOMAIN,{major:0,minor:2}),e.registerCommand(DOMAIN,"isInstalled",isInstalled,!0,"Check if the user has FontForge installed.",[],[]),e.registerCommand(DOMAIN,"parse",parse,!0,"Get the list of the glyphs in the provided font.",[{name:"path",type:"string",description:"The path of the font to parse."}],[{name:"unicodes",type:"Array.<number>",description:"An array containing all the unicode values of the spported glyphs."}]),e.registerCommand(DOMAIN,"convert",convert,!0,"Convert a font",[{name:"from",type:"string",description:"The path of the input file"},{name:"to",type:"string",description:"The path of the converted file"}])}Object.defineProperty(exports,"__esModule",{value:!0});var _cp=require("child_process"),_cp2=_interopRequireDefault(_cp),_path=require("path"),_path2=_interopRequireDefault(_path),DOMAIN="brackets-svg-font.fontforge-domain",ffInstalled=void 0,cwd=_path2["default"].join(__dirname,"fontforge"),glyphRegExp=/{"unicode":\d+,"name":".*?"}/.source,jsonFontRegExp=new RegExp("\\["+glyphRegExp+"(,"+glyphRegExp+")*\\]");exports.init=init;