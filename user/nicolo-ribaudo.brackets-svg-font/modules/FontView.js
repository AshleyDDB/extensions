define(["exports","module","thirdparty/babel-runtime/helpers/create-class","thirdparty/babel-runtime/helpers/class-call-check","./SymbolRegistry","thirdparty/babel-runtime/helpers/interop-require","text!../html/font-view-container.html"],function(e,t,n,i,r,o,a){"use strict";var s=o["default"](r),u=o["default"](a),l=new s,c=(brackets.getModule("utils/ExtensionUtils"),brackets.getModule("view/WorkspaceManager"),function(){function e(t,n){if(i["default"](this,e),Object.getPrototypeOf(this)===e.prototype)throw new Error("FontView is an abstract class: it can't be directly instantiated.");this[l.get("$container")]=n,this[l.get("created")]=!1,this[l.get("file")]=t,this[l.get("maxGlyphsPerLine")]=Math.floor(screen.width/100),this[l.get("promise")]=this[l.get("load")](),this.$el=$(Mustache.render(u,{path:t.fullPath})).on("mouseenter",".glyph",function(){var e=$(this),t=e.parents(".font-view").height()/2,n=e.parents(".font-container").scrollTop(),i=e.position().top;i-n>t&&e.addClass("to-top")}).on("mouseleave",".glyph",function(){$(this).removeClass("open to-top")})}return n["default"](e,[{key:"adjustScrollPos",value:function(){}},{key:"create",value:function(){this[l.get("$container")].find(".pane-content").append(this.$el),this.updateLayout()}},{key:"destroy",value:function(){this.$el.remove()}},{key:"focus",value:function(){}},{key:"getFile",value:function(){return this[l.get("file")]}},{key:"getScrollPos",value:function(){}},{key:"updateLayout",value:function(e){var t=this;return e||!this[l.get("loaded")]?this[l.get("load")]().then(function(){return t.updateLayout()}):void this[l.get("render")]()}},{key:"promise",value:function(){return this[l.get("promise")]}},{key:"_load",value:function(){}},{key:"_renderGlyphs",value:function(e){}},{key:"_sort",value:function(e){return e.sort(function(e,t){return parseInt(e.unicode,16)>parseInt(t.unicode,16)?1:-1})}},{key:l.get("load"),value:function(){var e=this;return this._load().then(function(){return e[l.get("loaded")]=!0})}},{key:l.get("render"),value:function(){this.$el.find(".font-container > div").html("").append(this._renderGlyphs(this[l.get("maxGlyphsPerLine")]))}}]),e}());Mustache.parse(u),t.exports=c});